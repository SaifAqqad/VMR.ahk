name: Tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  VMR_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      - name: Run VMR_test
        id: run_VMR_test
        shell: pwsh
        run: |
          echo "Installing scoop"
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser -Force;
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop bucket add extras;
          scoop bucket add utils https://github.com/SaifAqqad/utils.git;

          echo "Installing Autohotkey"
          scoop install extras/autohotkey sudo;

          echo "Installing Voicemeeter"
          scoop install utils/voicemeeter_banana
          
          echo "Running voicemeeter"
          voicemeeterpro.ps1
          Start-Sleep -Seconds 6

          echo "Running AHK"
          cd .\tests\
          $err = Invoke-Expression "$(scoop prefix autohotkey)\AutoHotkeyU64.exe /ErrorStdOut /f '.\VBVMR_test.ahk' '$(scoop prefix voicemeeter_banana)'";
          Wait-Process -Name "AutoHotkeyU64" -Timeout 30;
          if (!(Test-Path "VBVMR_test.xml")) {throw 'VBVMR test failed';}
          $err = Invoke-Expression "$(scoop prefix autohotkey)\AutoHotkeyU64.exe /ErrorStdOut /f '.\VMR_test.ahk' '$(scoop prefix voicemeeter_banana)'";
          Wait-Process -Name "AutoHotkeyU64" -Timeout 30;
          if (!(Test-Path "VMR_test.xml")) {throw 'VMR test failed';}
      - uses: dorny/test-reporter@v1
        name: Test Report
        with:
          name: 'Tests results'
          path: './tests/*_test.xml'
          reporter: 'java-junit'
