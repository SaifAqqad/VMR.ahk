name: run_tests
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  VMR_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      - name: Run VMR_test
        id: run_VMR_test
        shell: pwsh
        run: |
          echo "Installing scoop"
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser -Force;
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop bucket add utils https://github.com/SaifAqqad/utils.git;

          echo "Installing Autohotkey"
          scoop install utils/autohotkey sudo;

          echo "Downloading Voicemeeter"
          Invoke-WebRequest -Uri "https://download.vb-audio.com/Download_CABLE/VoicemeeterSetup.exe" -OutFile "VoicemeeterSetup.exe"

          echo "Installing Voicemeeter"
          sudo .\VoicemeeterSetup.exe -i -h

          echo "Running AHK"
          cd .\tests\
          $err = Invoke-Expression "$(scoop prefix autohotkey)\AutoHotkeyU64.exe /ErrorStdOut /f '.\VBVMR_test.ahk' '$(${env:ProgramFiles(x86)})\VB\Voicemeeter'";
          Wait-Process -Name "AutoHotkeyU64" -Timeout 30;
          if (!(Test-Path "VBVMR_test.xml")) {throw 'VBVMR test failed';}
          $err = Invoke-Expression "$(scoop prefix autohotkey)\AutoHotkeyU64.exe /ErrorStdOut /f '.\VMR_test.ahk' '$(${env:ProgramFiles(x86)})\VB\Voicemeeter'";
          Wait-Process -Name "AutoHotkeyU64" -Timeout 30;
          if (!(Test-Path "VMR_test.xml")) {throw 'VMR test failed';}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: './*_test.xml'
          fail_on_failure: True
          require_tests: True